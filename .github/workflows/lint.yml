# name: Lint

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"

#       - name: Install dependencies
#         run: |
#           cd urban-eats-client
#           npm install

#       # - name: Run lint on all files
#       #   run: |
#       #     cd urban-eats-client
#       #     npm run lint

#       - name: Get list of changed files using git diff
#         id: changed-files
#         run: |
#           echo "CHANGED_FILES=$(git diff --name-only ${{ github.base_ref }} ${{ github.head_ref }} | grep -E '\.jsx?$')" >> $GITHUB_ENV

#       - name: Debug changed files output
#         run: |
#           echo "Changed files: ${{ env.CHANGED_FILES }}"

#       - name: Run lint on changed files
#         run: |
#           cd urban-eats-client
#           if [ -n "$CHANGED_FILES" ]; then
#             echo "$CHANGED_FILES" | xargs npm run lint --
#           else
#             echo "No JavaScript/JSX files were changed."
#           fi

# name: Lint changed JS/JSX files

# on: [push, pull_request]

# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 2

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: "18"

#       - name: Install dependencies
#         run: |
#           cd urban-eats-client
#           npm install
#           npm install eslint --save-dev
#       - name: Fetch all branches
#         run: |
#           pwd
#           git fetch --all

#       - name: Get list of changed files using git diff
#         id: changed-files
#         run: |
#           if [ "${{ github.event_name }}" = "pull_request" ]; then
#              BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
#              HEAD_BRANCH="${{ github.event.pull_request.head.ref }}"
#              CHANGED_FILES=$(git diff --name-only "origin/$BASE_BRANCH"..."origin/$HEAD_BRANCH" | grep -E '\.jsx?$')
#            else
#              CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep -E '\.jsx?$')
#            fi
#              echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

#       - name: Output changed files for debugging
#         run: |
#           echo "Changed files: $CHANGED_FILES"

#       - name: Run lint on changed files
#         run: |
#           pwd
#           ls
#           cd urban-eats-client
#           pwd
#           ./node_modules/.bin/eslint .
#           if [ -n "$CHANGED_FILES" ]; then
#             echo "$CHANGED_FILES" | xargs -I {} ./node_modules/.bin/eslint {} --ext js,jsx --report-unused-disable-directives --max-warnings 0
#             npx eslint $CHANGED_FILES
#           else
#             echo "No JavaScript/JSX files were changed."
#           fi
#         env:
#           CHANGED_FILES: ${{ env.CHANGED_FILES }}

name: Lint changed JS/JSX files

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          cd urban-eats-client
          npm install

      - name: Fetch all branches
        run: |
          git fetch --all

      - name: Determine changed files
        id: changed-files
        run: |
          BASE_BRANCH="${{ github.base_ref }}"
          HEAD_BRANCH="${{ github.head_ref }}"
          CHANGED_FILES=$(git diff --name-only "origin/${BASE_BRANCH}"..."origin/${HEAD_BRANCH}" | grep -E '\.jsx?$')
          # CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep -E '\.jsx?$')


          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
        shell: bash

      - name: Output changed files for debugging
        run: |
          echo "Changed files: $CHANGED_FILES"

      - name: Check for branch issues
        run: |
          git branch -a
          git fetch --all

      - name: Run lint on changed files
        run: |
          cd urban-eats-client
          eslint --fix $(git diff --name-only HEAD **/*.js | xargs)
        env:
          CHANGED_FILES: ${{ env.CHANGED_FILES }}
